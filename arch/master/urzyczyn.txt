
Paradoks Herbelina:
- unrestricted use of `call/cc` and `throw` in a language with dependent sum types and equality
  leads to an inconsistent system.
- Herbelin, 2005:
  [...]a minimal dependent type theory based on Σ-types and equality is degenerated in presence of computational classical logic.[...]
  As a consequence, formalisms such as Martin-Löf’s type theory or the (Set-predicative variant of the) Calculus of Inductive Constructions are inconsistent in presence of computational classical logic.
- Bowman 2018: Herbelin (2005) shows that unrestricted use of call/cc and throw in a language with Σ types and equality leads to an inconsistent system.  The inconsistency is caused by type dependency on terms involving control effects.  Herbelin (2012) solves the inconsistency by constraining types to depend only on negative-elimination-free (NEF) terms, which are free of effects. This restriction makes dependent types compatible with classical reasoning enabled by the control operators.
  https://www.williamjbowman.com/resources/wjb-dissertation.pdf

- Impredicativity of Set + excluded middle + axiom of unique choice is inconsistent
  http://pauillac.inria.fr/~herbelin/talks/cic.pdf

- z tego co rozumiem, teoria typów jest logiką. jeśli dodamy do niej odpowiednik
  typu niedeterministycznego, np. monady List, to dla logiki wyrażającej uprzednio
  języki regularne, nic nie powinno się zmienić (DFA = NFA), ale dla logiki
  wyrażającej języki bezkontekstowe, siła wyrazu powinna się zwiększyć (DPDA < PDA)

- kontynuacje =/= wyjątki
  https://link.springer.com/content/pdf/10.1007/3-540-48523-6_60.pdf

Type theory is both a logic and a computation: this is the C-H isomorphism
https://math.stackexchange.com/a/2811256/876802

b) złożoność opisowa

na podstawie dyskusji pod https://cstheory.stackexchange.com/q/27824

Hillebrand, Kanellakis 1996:
termy postaci {0, 1}* -> Bool w STLC wyrażaja dokładnie języki regularne
Theorem 3.4: https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.23.8845&rep=rep1&type=pdf

są rachunki lambda dla PTIME:
https://www.sciencedirect.com/science/article/pii/S0890540108001119

wskazówi z tej prezentacji: https://www.cl.cam.ac.uk/~ad260/talks/wollic-tutorial.pdf
- Gurevichm Shelah 1986: LFP = IFP (inflanationary fixed-point)
- Evenness is not definable in IFP (proof by Ehreneucht-Fraisse games)
- Cai, Furer, Immerman, 1992: There are polynomial-time decidable properties of graphs that are not definable in IFP + C (IFP + counting)
- Immerman and Lander 1989: IFP + C captures PTime on trees
- Grohe and Marino 1999: IFP + C captures PTime on any class of graphs of bounded treewidth
- Grohe 1998: IFP + C captures PTime on the class of planar graphs
- Grohe 2008: IFP + C captures PTime on the class of graphs that exclude K5 as a minor

bardzo fajna praca!
Grohe 2012: https://dl.acm.org/doi/pdf/10.1145/2371656.2371662
- Let C be a class of graphs with at least one excluded minor. Then IFP+C captures PTIME on C.
- IFP+C does not capture PTIME on the class of cubic graphs [Cai et al. 1992]


Dawar, Grohe, Holm, Laubner:
def. LFP+rank: LFP logic + an operator to define the rank of a definable matrix
then IFP+C < LFP+rank <= PTIME
(tu link do prezentacji, w której Eryk Kopczyński najwyraźniej coś majstrował: https://logic.rwth-aachen.de/~pakusa/almoth_ilmenau_2012.pdf)
nie wiadomo czy sa własności PTIME, których nie możemy wyrazić w LFP+rank

diagram Immermana:
https://people.cs.umass.edu/~immerman/descriptive_complexity.html

,,one application of fixed point suffices to express any query expressible with several alternations of fixed point and negation.''
https://www.sciencedirect.com/science/article/pii/S0019995886800298?via%3Dihub
